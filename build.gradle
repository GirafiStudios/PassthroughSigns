plugins {
    id 'maven-publish'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

ext.buildnumber=""
if (System.getenv().BUILD_NUMBER) {
    ext.buildnumber = ".B" + System.getenv().BUILD_NUMBER
}

version = "${minecraft_version}-${mod_version}${buildnumber}"
group = "com.girafi.passthroughsigns"

base {
    archivesName = "PassthroughSigns"
}

minecraft {
    mappings channel: 'official', version: project.minecraft_version
	enableIdeaPrepareRuns = true
	copyIdeResources = true
	generateRunFolders = true

    runs {
        client {
            workingDirectory project.file('run')
			
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
}

def resourceTargets = ['META-INF/mods.toml']
def replaceProperties = [
        minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
        forge_version: forge_version, forge_version_range: forge_version_range,
        loader_version_range: loader_version_range,
        mod_version: mod_version,
]

processResources {
    inputs.properties replaceProperties
    replaceProperties.put 'project', project

    filesMatching(resourceTargets) {
        expand replaceProperties
    }
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allJava
	archiveClassifier = 'sources'
}

task apiJar(type: Jar) {
	from sourceSets.main.allSource
	from sourceSets.main.output
    include 'com/girafi/passthroughsigns/api/**/*'
    archiveClassifier = 'api'
}

artifacts {
    archives sourcesJar
    archives apiJar
}

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            artifactId "passthroughsigns_${minecraft_version}"
            artifact jar
			artifact sourcesJar
			artifact apiJar
        }
    }
    repositories {
        if (project.hasProperty('maven_repo')) {
            maven { url maven_repo }
        } else {
            mavenLocal()
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}